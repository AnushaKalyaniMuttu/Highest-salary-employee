import java.util.Arrays;
import java.util.List;
import java.util.Map;
import java.util.Optional;
import java.util.stream.Collectors;

public class Main {
    public static class Employee {
        private String name;
        private String department;
        private double salary;

        public Employee(String name, String department, double salary) {
            this.name = name;
            this.department = department;
            this.salary = salary;
        }

        public String getName() {
            return name;
        }

        public String getDepartment() {
            return department;
        }

        public double getSalary() {
            return salary;
        }
    }

    public static void main(String[] args) {
        List<Employee> employees = Arrays.asList(
                new Employee("John", "HR", 50000),
                new Employee("Alice", "Finance", 60000),
                new Employee("Bob", "IT", 55000),
                new Employee("Emma", "HR", 52000),
                new Employee("Mike", "IT", 58000)
        );

        Map<String, Optional<Employee>> highestSalaryByDepartment = employees.stream()
                .collect(Collectors.groupingBy(Employee::getDepartment,
                        Collectors.maxBy((e1, e2) -> Double.compare(e1.getSalary(), e2.getSalary()))));

        highestSalaryByDepartment.forEach((department, employee) -> {
            System.out.println(department + ":");
            employee.ifPresent(emp -> System.out.println("\tHighest Salary: " + emp.getSalary() + " for employee " + emp.getName()));
        });
    }
}
